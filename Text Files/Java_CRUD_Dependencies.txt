**********DEPENDENCIES*************************   

	<dependency>   ACCESSIBLE IN SPRING STARTER PROJECT SET-UP
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-data-jpa</artifactId>
	</dependency>

	<dependency>   ACCESSIBLE IN SPRING STARTER PROJECT SET-UP
		<groupId>mysql</groupId>
		<artifactId>mysql-connector-java</artifactId>
		<scope>runtime</scope>
	</dependency>   

		    ***NEEDS TO BE ADDED TO POM.XML***  
	<dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

	<dependency>
                <groupId>org.apache.tomcat.embed</groupId>
                <artifactId>tomcat-embed-jasper</artifactId>
        </dependency>

        <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>jstl</artifactId>
        </dependency>

******JSP TAGS*****************
<%@taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>   
<%@taglib prefix="form" uri="http://www.springframework.org/tags/form"%> 


***********APPLICATION.PROPERTIES***********
spring.mvc.view.prefix: /WEB-INF/
spring.mvc.hiddenmethod.filter.enabled=true
spring.datasource.url=jdbc:mysql://localhost:3306/<<SCHEMA NAME>>
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update


1. CREATE SPRING STARTER PROJECT

2. ADD CHANGE JAR TO WAR

3. ADD WEB, DEVTOOLS, MYSQL-CONNECTOR AND JPA DEPENDENCIES (OTHER THREE LISTED ABOVE) TO POM.XML

4. ADD ABOVE CODE TO APPLICATION.PROPERTIES


5. SRC/MAIN/JAVA: ADD THE PACKAGES: 
COM.WORKSPACENAME.APPNAME.CONTROLLERS
COM.WORKSPACENAME.APPNAME.MODELS
COM.WORKSPACENAME.APPNAME.SERVICES
COM.WORKSPACENAME.APPNAME.REPOSITORIES


5a. IN EACH RESPECTIVE PACKAGE, CREATE THE CLASSES 

       --- ALL OF THESE WILL AUTOMATICALLY ADD .JAVA AFTER ADDING, SO NO NEED TO WRITE .JAVA

i.   <<CONTROLLERNAME>>CONTROLLER   (E.G. BOOKCONTROLLER)

ii.  MODELNAME    (E.G. BOOK)

iii. <<REPOSITORYNAME>>REPOSITORY (E.G. BOOKREPOSITORY)  (NOTE: THIS IS ADDED AS AN INTERFACE, NOT A CLASS)

iv.  <<SERVICENAME>>SERVICE (E.G. BOOKSERVICE)


6. In src>main>webapp:

Add a WEB-INF folder.
Inside WEB-INF, add a index.jsp file. 
Make sure it has the necessary JSP tags above.




npx create-react-app client --scripts-version @geoffcodesthings/react-scripts --template tailwindcss


So in that part on the .jsp side, you're utilizing "ninja" info for the most part. Your action, method and modelAttribute are all oriented around the ninja. 










